} else {
select <- 1:nrow(trace)
}
# If parameters not given assume all params.
if (!is.numeric(params)){
params <- 1:ncol(trace)
}
# Store and set margins
margins <- par("mar")
par(mar = c(2.1,4.1,0.6,1.1))
# Store and set columns & rows
if (length(params) < 5){
par(mfrow = c(length(params),2))
} else {
par(mfrow = c(4,2))
}
for (i in params){
plot(select, trace[select,i], type = "l", col = "blue", main = "",
xlab = "", ylab = colnames(trace)[i])
hist(trace[select,i], breaks = "FD", xlab = "", ylab = "frequency", main = "",
col = "dark green", border = "dark green")
abline(v = mean(trace[,i]), col = "white")
}
par(mfrow = c(1,1), mar = margins)
}
# Autocorrelation Plots ---------------------------------------------------
aplots <- function(blimfit, params = NULL){
# Check if object has class blimfit
if (class(blimfit) != "blimfit") stop("Please enter a blimfit object!")
# MH warning message
if (blimfit$algorithm == "R based Metropolis-Hastings Sampling Regression"){
cat("Note that Metropolis-Hastings sampling leads to high autocorrelation!
Check that acceptance rates are between 0.15 and 0.5 in console at blim output.",
"\n")
}
# Pick up trace for the column names
trace <- blimfit$trace[1:2,]
# Pick up autocorrelation
auto <- blimfit$auto
# If parameters not given assume all params.
if (!is.numeric(params)){
params <- 1:ncol(trace)
}
# Store and set margins
margins <- par("mar")
par(mar = c(2.1,4.1,0.6,1.1))
# Store and set columns & rows
if (length(params) < 5){
par(mfrow = c(length(params),1))
} else {
par(mfrow = c(4,1))
}
for (i in params){
plot(auto[i,], type = "h", col = "blue", main = "",
xlab = "", ylab = colnames(trace)[i], lwd = 3, ylim = c(0,1))
}
par(mfrow = c(1,1), mar = margins)
}
DIC(fit)
DIC(fit1)
density(fit$trace)
require(ks)
?ks
kde(fit$trace)
kde(fit$trace, eval.points = apply(fit$trace,2,mean))
apply(fit$trace,2,median)
var(fit$trace)
cov.mve(fit$trace)
?cov.mve
v <- cov.mve(fit$trace)
2*pi
2pi
(2*pi)^(length(v$center)/2)
(2*pi)^(length(v$center)/2)*sqrt(abs(v$cov))
v <- cov.mve(fit$trace[,-1])
(2*pi)^(length(v$center)/2)*sqrt(abs(v$cov))
v <- cov.mve(fit$trace[,-4])
(2*pi)^(length(v$center)/2)*sqrt(abs(v$cov))
log((2*pi)^(length(v$center)/2))+log(sqrt(abs(v$cov)))
exp(log((2*pi)^(length(v$center)/2))+log(sqrt(abs(v$cov))))
log((2*pi)^(length(v$center)/2))+log(sqrt(determinant(v$cov)))+log(dgamma())
log((2*pi)^(length(v$center)/2))+log(sqrt(determinant(v$cov)))
determinant(v$cov)
log((2*pi)^(length(v$center)/2))+log(sqrt(determinant(v$cov)$modulus))
log((2*pi)^(length(v$center)/2))+log(sqrt(determinant(v$cov)[1]))
log((2*pi)^(length(v$center)/2))+log(sqrt(determinant(v$cov)[[1]]))
log((2*pi)^(length(v$center)/2))+log(sqrt(determinant(v$cov, logarithm = FALSE)[[1]]))
?determinant
det(v$cov)
log((2*pi)^(length(v$center)/2))+log(sqrt(det(v$cov)))
log((2*pi)^(length(v$center)/2))+log(sqrt(det(v$cov)))+log(dnorm(fit$y,mean = fit$X%&%v$center[-1]))
fit$X%&%v$center[-1]
fit$X%*%v$center[-1]
log((2*pi)^(length(v$center)/2))+log(sqrt(det(v$cov)))+log(dnorm(fit$y,mean = fit$X%*%v$center[-1], sd = sqrt(center[1])))
log((2*pi)^(length(v$center)/2))+log(sqrt(det(v$cov)))+log(dnorm(fit$y,mean = fit$X%*%v$center[-1], sd = sqrt(v$center[1])))
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))
v<- cov.mve(fit1)
v<- cov.mve(fit1$trace)
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))*12
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))*2
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))*0.1
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))*0.9
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))*0.7
(2*pi)^(length(v$center)/2)*sqrt(det(v$cov))*0.2
lprior <- function(theta){dnorm(theta[1],0,10000)*dnorm(theta[2],0,10000)}
lprior(c(1,1))
lprior(c(0,1))
lprior(c(0,0))
lprior(c(0,1000))
lprior <- function(theta){(1/dgamma(theta[1],0.1,0.1))*dnorm(theta[2],0,10000)*dnorm(theta[3],0,10000)}
lprior(v$center)
v$center
lprior <- function(theta){(log(1/dgamma(theta[1],0.1,0.1)))+log(dnorm(theta[2],0,10000))+log(dnorm(theta[3],0,10000))}
lprior(v$center)
lprior(unname(v$center))
ldata <- function(theta,X,y){sum(log(dnorm(y,X%*%theta[-1],theta[1])))}
ldata(unname(v$center),X = fit$X, y = fit$y)
v<- cov.mve(fit)
v<- cov.mve(fit$trace)
ldata(unname(v$center),X = fit$X, y = fit$y)
ldata <- function(theta,X,y){sum(log(dnorm(y,theta[-1]%*%X,theta[1])))}
ldata(unname(v$center),X = fit$X, y = fit$y)
fit$X
v$center
v<- cov.mve(fit$trace[-4])
ldata(unname(v$center),X = fit$X, y = fit$y)
ldata <- function(theta,X,y){sum(log(dnorm(y,X%*%theta[-1],theta[1])))}
ldata(unname(v$center),X = fit$X, y = fit$y)
v$center
v<- cov.mve(fit$trace[,-4])
v$center
ldata(unname(v$center),X = fit$X, y = fit$y)
lprior(unname(v$center))
rm(ldata,lprior)
blimfit<-fit
lldata <- function(theta,X,y){
sum(log(dnorm(y,theta[-1]%*%X,theta[1])))
}
llprior <- function(theta){
log(dgamma(1/theta[1],0.1,0.1))+
log(dnorm(theta[2],0,10000))+
log(dnorm(theta[3],0,10000))
}
rm(lldata)
rm(lprior)
rm(llprior)
llik <- function(theta,X,y){
sum(log(dnorm(y,theta[-1]%*%X,theta[1])))
}
lprior <- function(theta){
log(dgamma(1/theta[1],0.1,0.1))+
log(dnorm(theta[2],0,10000))+
log(dnorm(theta[3],0,10000))
}
v <- cov.mve(blimfit$trace[,-ncol(blimfit$trace)])
v
ml <- function(blimfit){
llik <- function(theta,X,y){
sum(log(dnorm(y,theta[-1]%*%X,theta[1])))
}
lprior <- function(theta){
log(dgamma(1/theta[1],0.1,0.1))+
log(dnorm(theta[2],0,10000))+
log(dnorm(theta[3],0,10000))
}
v <- cov.mve(blimfit$trace[,-ncol(blimfit$trace)])
logdetv <- log(det(v$cov))
hmax <- llik(unname(v$center),blimfit$X,blimfit$y)+lprior(v$center)
return(exp(hmax+0.5*length(v$center)*log(2*pi)+0.5*logdetv))
}
ml(fit)
ml <- function(blimfit){
llik <- function(theta,X,y){
sum(log(dnorm(y,theta%*%X,theta[1])))
}
lprior <- function(theta){
log(dgamma(1/theta[1],0.1,0.1))+
log(dnorm(theta[2],0,10000))+
log(dnorm(theta[3],0,10000))
}
v <- cov.mve(blimfit$trace[,-ncol(blimfit$trace)])
logdetv <- log(det(v$cov))
hmax <- llik(unname(v$center),blimfit$X,blimfit$y)+lprior(v$center)
return(exp(hmax+0.5*length(v$center)*log(2*pi)+0.5*logdetv))
}
ml(fit)
v <- cov.mve(blimfit$trace[,-ncol(blimfit$trace)])
v$center%*%fit$trace
fit$trace%*%v$center
v$center
fit$trace[,-4]
fit$X%*%v$center
v$center%*%fit$X
fit$X
v$center[-1%*%fit$X
v$center[-1`]%*%fit$X
v$center[-1]%*%fit$X
v$center[-1]
fit$X%*%v$center[-1]
ml <- function(blimfit){
llik <- function(theta,X,y){
sum(log(dnorm(y,X%*%theta[-1],theta[1])))
}
lprior <- function(theta){
log(dgamma(1/theta[1],0.1,0.1))+
log(dnorm(theta[2],0,10000))+
log(dnorm(theta[3],0,10000))
}
v <- cov.mve(blimfit$trace[,-ncol(blimfit$trace)])
logdetv <- log(det(v$cov))
hmax <- llik(unname(v$center),blimfit$X,blimfit$y)+lprior(unname(v$center))
return(exp(hmax+0.5*length(v$center)*log(2*pi)+0.5*logdetv))
}
ml(fit)
ml <- function(blimfit){
llik <- function(theta,X,y){
sum(log(dnorm(y,X%*%theta[-1],theta[1])))
}
lprior <- function(theta){
log(dgamma(1/theta[1],0.1,0.1))+
log(dnorm(theta[2],0,10000))+
log(dnorm(theta[3],0,10000))
}
v <- cov.mve(blimfit$trace[,-ncol(blimfit$trace)])
logdetv <- log(det(v$cov))
hmax <- llik(unname(v$center),blimfit$X,blimfit$y)+lprior(unname(v$center))
return(hmax+0.5*length(v$center)*log(2*pi)+0.5*logdetv)
}
ml(fit)
ml(fit1)
exp(ml(fit)-ml(fit1))
exp(ml(fit1)-ml(fit))
exp(ml(fit1))/exp(ml(fit)))
exp(ml(fit1))/exp(ml(fit))
exp(ml(fit))/exp(ml(fit1))
exp(ml(fit))/exp(ml(fit1))
exp(ml(fit))/exp(ml(fit1))
exp(ml(fit)-ml(fit1))
exp(ml(fit)-ml(fit1))
exp(ml(fit)-ml(fit1))
fit <- blim(speed~dist,cars,iter = 99999)
fit1 <- blim(speed~dist+I(dist^2),cars,iter = 99999)
exp(ml(fit)-ml(fit1))
exp(ml(fit)-ml(fit1))
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$center
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$center
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$center
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$center
?cov.mve
ml <- function(blimfit){
llik <- function(theta,X,y){
sum(log(dnorm(y,X%*%theta[-1],theta[1])))
}
lprior <- function(theta){
log(dgamma(1/theta[1],0.1,0.1))+
log(dnorm(theta[2],0,10000))+
log(dnorm(theta[3],0,10000))
}
v$center <- apply(blimfit$trace[,-ncol(blimfit$trace)],2,median)
v$cov <- cov(blimfit$trace[,-ncol(blimfit$trace)])
logdetv <- log(det(v$cov))
hmax <- llik(unname(v$center),blimfit$X,blimfit$y)+lprior(unname(v$center))
return(hmax+0.5*length(v$center)*log(2*pi)+0.5*logdetv)
}
exp(ml(fit)-ml(fit1))
exp(ml(fit)-ml(fit1))
exp(ml(fit)-ml(fit1))
exp(ml(fit)-ml(fit1))
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$cov
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$cov
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$cov
cov.mve(blimfit$trace[,-ncol(blimfit$trace)])$cov
lapply(lapply(lapply(strsplit(blimfit$priors, "(", fixed = T),
function(x)append(x,"theta[1],", after = 1)),
function(x)paste(x,collapse="")),
function(x)paste("d",substr(x,2,nchar(x)), sep = ""))
lapply(lapply(lapply(strsplit(blimfit$priors, "(", fixed = T),
function(x)append(x,"(theta[1],", after = 1)),
function(x)paste(x,collapse="")),
function(x)paste("d",substr(x,2,nchar(x)), sep = ""))
for (i in blimfit$priors){
print(strsplit(i), "(", fixed = T))
}
for (i in blimfit$priors){
print(strsplit(i), "(", fixed = T)
}
for (i in blimfit$priors){
print(strsplit(i, "(", fixed = T)
}
for (i in blimfit$priors){
print(strsplit(i, "(", fixed = T))
}
for (i in blimfit$priors){
print(append(strsplit(i, "(", fixed = T), paste("(theta[",i,"]",sep = ""), after = 1)
}
for (i in blimfit$priors){
print(append(strsplit(i, "(", fixed = T), paste("(theta[",i,"]",sep = ""), after = 1))
}
count <- 0
for (i in blimfit$priors){
count <- count+1
print(append(strsplit(i, "(", fixed = T), paste("(theta[",count,"]",sep = "")))
}
count <- 0
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
print(append(i, paste("(theta[",count,"]",sep = "")))
}
count <- 0
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
print(append(i, paste("(theta[",count,"]",sep = ""), after = 1))
}
count <- 0
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
print(append(i, paste("(theta[",count,"],",sep = ""), after = 1))
}
count <- 0
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
print(paste(append(i, paste("(theta[",count,"],",sep = ""), after = 1), collapse = ""))
}
count <- 0
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
h<- paste("log(",append(i, paste("(theta[",count,"],",sep = ""), after = 1), collapse = ""))
}
count <- 0
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
h<- paste("log(",append(i, paste("(theta[",count,"],",sep = ""), after = 1), collapse = "")
}
h
count <- 0
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
h<- paste(append(i, paste("(theta[",count,"],",sep = ""), after = 1), collapse = "")
}
h
h <- ""
count <- 0
count <- 0
h <- ""
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
h<- h+ paste("log(",append(i, paste("(theta[",count,"],",sep = ""), after = 1), ")", sep = "", collapse = "")
}
count <- 0
h <- c("","")
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
h[count]<- paste("log(",append(i, paste("(theta[",count,"],",sep = ""), after = 1), ")", sep = "", collapse = "")
}
count <- 0
h <- c("","")
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
h[count]<- paste(append(i, paste("(theta[",count,"],",sep = ""), after = 1), collapse = "")
}
h
paste(h,collapse = "+")
paste(paste("log(",h,")"),collapse = "+")
paste(paste("log(",h,")", sep = ""),collapse = "+")
paste(paste("log(",h,")", sep = ""),collapse = " + ")
hoi <- function(theta)eval(paste(paste("log(",h,")", sep = ""),collapse = " + "))
hoi(c(1,1))
hoi <- function(theta)eval(parse(txt = paste(paste("log(",h,")", sep = ""),collapse = " + ")))
hoi(c(1,1))
hoi <- function(theta)eval(parse(text = paste(paste("log(",h,")", sep = ""),collapse = " + ")))
hoi(c(1,1))
hoi
hoi1 <- function(theta)log(dnorm(theta[1],0,10000))+log(dnorm(theta[2],0,10000))
hoi1(c(1,1))
source('~/3 - Personal/R/blim/R/blim.r')
fit2 <- blim(dist~speed,cars,99999)
blimfit <- fit2
count <- 0
h <- c("","")
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
if (count == 1){
h[count]<- paste(append(i, paste("(1/theta[",count,"],",sep = ""),
after = 1), collapse = "")
} else {
h[count]<- paste(append(i, paste("(theta[",count,"],",sep = ""),
after = 1), collapse = "")
}
}
lpriorstring <- paste(paste("log(",h,")", sep = ""),collapse = " + ")
lprior <- function(theta)eval(parse(text = lpriorstring))
v$center <- apply(blimfit$trace[,-ncol(blimfit$trace)],2,median)
lprior(unname(v$center))
ml <- function(blimfit){
# Laplace - Metropolis Marginal Likelihood using median approximation
# Create log(P(Data | theta))
llik <- function(theta,X,y){
sum(log(dnorm(y,X%*%theta[-1],theta[1])))
}
# Create log(P(theta | Model))
count <- 0
h <- c("","")
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
if (count == 1){
h[count]<- paste(append(i, paste("(1/theta[",count,"],",sep = ""),
after = 1), collapse = "")
} else {
h[count]<- paste(append(i, paste("(theta[",count,"],",sep = ""),
after = 1), collapse = "")
}
}
lpriorstring <- paste(paste("log(",h,")", sep = ""),collapse = " + ")
lprior <- function(theta)eval(parse(text = lpriorstring))
# get the medians
medians <- apply(blimfit$trace[,-ncol(blimfit$trace)],2,median)
# trace covmat is an unbiased estimate of the inverse hessian
covmat <- cov(blimfit$trace[,-ncol(blimfit$trace)])
logdet <- log(det(covmat))
hmax <- llik(medians,blimfit$X,blimfit$y)+lprior(medians)
return(hmax+0.5*length(medians)*log(2*pi)+0.5*logdet)
}
ml(fit2)
ml(fit1)
fit1 <- blim(dist~speed,cars,99999)
ml(fit1)
exp(ml(fit1)-ml(fit2))
unname(exp(ml(fit1)-ml(fit2)))
ml <- function(blimfit){
# Laplace - Metropolis Marginal Likelihood using median approximation
# Create log(P(Data | theta))
llik <- function(theta,X,y){
sum(log(dnorm(y,X%*%theta[-1],theta[1])))
}
# Create log(P(theta | Model))
count <- 0
h <- c("","")
for (i in strsplit(blimfit$priors, "(", fixed = T)){
count <- count+1
if (count == 1){
h[count]<- paste(append(i, paste("(1/theta[",count,"],",sep = ""),
after = 1), collapse = "")
} else {
h[count]<- paste(append(i, paste("(theta[",count,"],",sep = ""),
after = 1), collapse = "")
}
}
lpriorstring <- paste(paste("log(",h,")", sep = ""),collapse = " + ")
lprior <- function(theta)eval(parse(text = lpriorstring))
# get the medians
medians <- apply(blimfit$trace[,-ncol(blimfit$trace)],2,median)
# trace covmat is an unbiased estimate of the inverse hessian
covmat <- cov(blimfit$trace[,-ncol(blimfit$trace)])
logdet <- log(det(covmat))
hmax <- llik(medians,blimfit$X,blimfit$y)+lprior(medians)
return(unname(hmax+0.5*length(medians)*log(2*pi)+0.5*logdet))
}
unname(exp(ml(fit1)-ml(fit2)))
source('~/3 - Personal/R/blim/R/blim.r')
BF(fit2)
blimfit$priors[[-1]]
blimfit$priors
blimfit$priors[-1]
?birthwt
source('~/3 - Personal/R/blim/R/blim.r')
rm(list = ls())
require(devtools)
?install.github
install_github("vankesteren/blim")
require(devtools)
install_github("vankesteren/blim")
install_github("vankesteren/blim", force = T)
?birthwt
??birthwt
require(MASS)
fit <- blim(bwt~0+smoke+ht+ui+age)
require(blim)
fit <- blim(bwt~0+smoke+ht+ui+age)
fit <- blim(bwt~0+smoke+ht+ui+age, birthwt)
fit1 <- blim(bwt~0+smoke+ht+ui, birthwt)
DIC(fit)
DIC(fit1)
LMml(fit)
exp(LMml(fit)-LMml(fit1)
)
LMml(fit)-LMml(fit1)
fit1 <- blim(bwt~0+smoke+ht+ui+age+lwt, birthwt)
LMml(fit)-LMml(fit1)
exp(LMml(fit)-LMml(fit1)
)
summary(fit)
summary(fit1)
fit1 <- blim(bwt~smoke+ht+ui+age+lwt, birthwt)
fit <- blim(bwt~smoke+ht+ui+age, birthwt)
summary(fit1)
exp(LMml(fit)-LMml(fit1)
)
fit <- blim(bwt~logit(smoke+ht+ui+age), birthwt)
fit <- blim(bwt~exp(smoke+ht+ui+age)/1+exp(smoke+ht+ui+age), birthwt)
summary(fit)
fit <- blim(low~exp(smoke+ht+ui+age)/1+exp(smoke+ht+ui+age), birthwt)
summary(fit)
cplots(fit)
fit <- blim(bwt~smoke+ht+ui+age, birthwt)
cplots(fit)
summary(fit)
summary(fit1)
fit1 <- blim(bwt~smoke+ht+ui+age+I(age^2), birthwt)
summary(fit1)
exp(LMml(fit)-LMml(fit1)
)
